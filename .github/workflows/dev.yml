name: dev CI

on:
  workflow_dispatch:
  push:
    branches: [dev]
  pull_request:
    branches: [dev, master]

  schedule:
    - cron: '30 18 * * *' # run at 00:00 AM IST

jobs:
  g8:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # https://www.pika.dev/npm/snowpack/discuss/444
      # following step is needed because snowpack is watching files from node_modules as well
      - name: increase file watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - uses: actions/setup-node@v1
        with:
          node-version: '15.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache ~/.npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout ESW repo
        uses: actions/checkout@v2
        with:
          repository: tmtsoftware/esw

      - uses: coursier/setup-action@v1
        with:
          jvm: 11
          apps: sbt sbtn
      - uses: coursier/cache-action@v5

      - name: Install giter8
        run: |
          cs install giter8
          sudo mv /home/runner/cs/bin/g8 /usr/local/bin
          cd /usr/local/bin
          chmod +x g8

      - name: Cache ~/.cache
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-coursier-${{ hashFiles('project/Libs.scala') }}
          restore-keys: |
            ${{ runner.os }}-coursier-

      - name: Cache ~/.sbt
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Publish Local checked out ESW repo
        run: |
          sbtn clean 
          sbtn publishLocal

      - name: Extract branch name (Trigger - PR)
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

      - name: Extract branch name (Trigger - Push)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        id: extract_branch
      
      - name: Set branch name (trigger - Schedule)
        if: github.event_name == 'schedule'
        run: echo "BRANCH_NAME=dev" >> $GITHUB_ENV

      - name: create new project from esw-web-app-template.g8 template
        run: |
          echo "Running build for branch ${BRANCH_NAME}"
          g8 tmtsoftware/esw-web-app-template.g8 --name=sample --branch ${BRANCH_NAME}

      - name: Build - backend app
        working-directory: ./sample/sample-backend
        run: |
          sbtn clean 
          sbtn test

      - name: Build - frontend app
        working-directory: ./sample/sample-frontend
        run: |
          npm install
          npm run build
          npm run test

      - name: Notify slack
        if: always()
        continue-on-error: true
        uses: kpritam/slack-job-status-action@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev
